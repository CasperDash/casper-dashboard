import { useDispatch, useSelector } from 'react-redux';
import { toast } from 'react-toastify';
import { setLedgerOptions } from '../../actions/ledgerActions';
import { getLedgerError } from '../../services/ledgerServices';
import { getLedgerOptions } from '../../selectors/ledgerOptions';

const useLedgerKeys = () => {
	// Hook
	const dispatch = useDispatch();

	// Selector
	const {casperApp, ledgerKeys} = useSelector(getLedgerOptions);

	// Function
	const loadMoreKeys = async (callback) => {
		try {
			const nextKeyPath = ledgerKeys ? ledgerKeys.length : 0;
			for (let i = nextKeyPath; i < nextKeyPath + 5; i++) {
				const key = `02${(await casperApp.getAddressAndPubKey(`m/44'/506'/0'/0/${i}`)).publicKey.toString(
					'hex',
				)}`;
				ledgerKeys.push({ key, i });
			}
			typeof callback === 'function' && callback();
			dispatch(setLedgerOptions({
				app: casperApp,	
				ledgerKeys
			}));
		} catch (error) {
			toast.error(getLedgerError(error));
		}
	};

	return { loadMoreKeys };
};

export default useLedgerKeys;
